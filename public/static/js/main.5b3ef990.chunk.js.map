{"version":3,"sources":["context/UserContext.jsx","components/Header.jsx","URL.ENDPOINT.js","socket/Socket.jsx","components/SignIn.jsx","components/Canvas.jsx","components/Main.jsx","components/ModePick.jsx","components/EndGame.jsx","components/WordChoose.jsx","App.jsx","index.js"],"names":["UserContext","createContext","require","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","gameStatus","classes","nickName","useContext","className","AppBar","color","position","Toolbar","Typography","variant","URL_ENDPOINT","socket","io","transports","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","margin","SignIn","history","useHistory","setFullName","setNickName","role","useState","nick","setNick","name","setName","Container","component","maxWidth","CssBaseline","Avatar","TextField","fullWidth","id","label","placeholder","autoComplete","onChange","e","target","value","autoFocus","InputProps","startAdornment","InputAdornment","Button","type","disabled","onClick","emit","push","Box","mt","align","Canvas","changeWord","setChangeWord","canvasRef","useRef","contextRef","isDrawing","setIsDrawing","setColor","open","setOpen","useWindowSize","winWidth","winHeight","useEffect","canvas","current","height","context","getContext","scale","lineCap","lineWidth","on","x","y","beginPath","moveTo","data","lineTo","strokeStyle","hex","stroke","closePath","clearRect","startDrawing","rect","getBoundingClientRect","touch","touches","clientX","clientY","draw","finishDrawing","style","marginBottom","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","ref","startIcon","Tooltip","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","Main","setWord","setScore","word","words","modePicked","mode","score","guess","setGuess","secondUser","setSecondUser","scoreMap","easy","normal","hard","numberIndex","findIndex","currWord","ind","length","nextWord","toLocaleLowerCase","prevState","off","user2","fontSize","paragraph","ModePick","setModePicked","setWords","setMode","fetch","res","json","size","EndGame","WordChoose","justifyContent","gap","map","handleClick","App","createMuiTheme","primary","blue","orange","setRole","setGameStatus","fullName","Provider","ThemeProvider","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b3ef990.chunk.js","sourcesContent":["const { createContext } = require(\"react\");\nexport const UserContext = createContext();","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { UserContext } from '../context/UserContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header({ gameStatus }) {\n\n    const classes = useStyles();\n    const { nickName } = useContext(UserContext)\n    return (\n        <div className={classes.root + \"header\"}>\n            <AppBar color=\"secondary\" position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Draw & Guess\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {gameStatus ? `Hello ${nickName}` : \"\"}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};","export const URL_ENDPOINT = 'localhost:3001';\r\n","import io from 'socket.io-client';\nimport { URL_ENDPOINT } from '../URL.ENDPOINT';\nexport const socket = io(URL_ENDPOINT, {\n  transports: ['websocket'],\n});\n","import React, { useContext, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { socket } from '../socket/Socket';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignIn = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { setFullName, setNickName, role } = useContext(UserContext);\n  const [nick, setNick] = useState('');\n  const [name, setName] = useState('');\n  const handleClick = () => {\n    setNickName(nick);\n    setFullName(name);\n    socket.emit('signed');\n    if (role === 'draw') {\n      history.push('/mode');\n    } else {\n      history.push('/main');\n    }\n  };\n\n  return (\n    <div className='landingPage'>\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign in\n          </Typography>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            id='fullname'\n            label='Full Name'\n            name='fullName'\n            placeholder='Full Name'\n            autoComplete='fullname'\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n            autoFocus\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            name='nickname'\n            label='Nick Name'\n            placeholder='Nick Name'\n            id='nickname'\n            onChange={(e) => setNick(e.target.value)}\n            value={nick}\n            autoComplete='nickname'\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            disabled={nick && name ? false : true}\n            className={classes.submit}\n            onClick={(e) => handleClick(e)}\n          >\n            Lets Play !\n          </Button>\n        </div>\n        <Box mt={8}>\n          <Typography variant='body2' color='textSecondary' align='center'>\n            Draw & Guess - Tomer Revah for Moveo exam\n          </Typography>\n        </Box>\n      </Container>\n    </div>\n  );\n};\nexport default SignIn;\n","import { Button } from '@material-ui/core';\r\nimport React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport { TwitterPicker } from 'react-color';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { socket } from '../socket/Socket';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\n\r\nconst Canvas = ({ changeWord, setChangeWord }) => {\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [color, setColor] = useState('black');\r\n  const [open, setOpen] = useState(false);\r\n  const [winWidth, winHeight] = useWindowSize();\r\n  const { role } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const canvasHeightRatio = 0.6;\r\n  const canvasWidthRatio = 0.9;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.height = winHeight * canvasHeightRatio;\r\n    canvas.width = winWidth * canvasWidthRatio;\r\n    const context = canvas.getContext('2d');\r\n    context.scale(1, 1);\r\n    context.lineCap = 'round';\r\n    context.lineWidth = 3;\r\n    contextRef.current = context;\r\n  }, [winWidth, winHeight]);\r\n\r\n  useEffect(() => {\r\n    socket.on('start draw', ({ x, y }) => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(x, y);\r\n    });\r\n    socket.on('draw', (data) => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.lineTo(data.x, data.y);\r\n      contextRef.current.strokeStyle = data.color.hex;\r\n      contextRef.current.stroke();\r\n    });\r\n    socket.on('finish draw', () => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.closePath();\r\n    });\r\n    socket.on('clear', () => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n    });\r\n    socket.on('right answer', () => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n    });\r\n    socket.on('mode picked', () => {\r\n      if (!contextRef.current) return;\r\n      contextRef.current.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n    });\r\n  }, []);\r\n  const startDrawing = (e) => {\r\n    if (role === 'guess') return;\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const touch = e.touches[0];\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(touch.clientX - rect.x, touch.clientY - rect.y);\r\n    setIsDrawing(true);\r\n    socket.emit('start draw', {\r\n      x: touch.clientX - rect.x,\r\n      y: touch.clientY - rect.y,\r\n    });\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing) return;\r\n    if (role === 'guess') return;\r\n    const touch = e.touches[0];\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    contextRef.current.strokeStyle = color.hex;\r\n    contextRef.current.lineTo(touch.clientX - rect.x, touch.clientY - rect.y);\r\n    contextRef.current.stroke();\r\n    socket.emit('draw', {\r\n      x: touch.clientX - rect.x,\r\n      y: touch.clientY - rect.y,\r\n      color,\r\n    });\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    if (role === 'guess') return;\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n    socket.emit('finish draw');\r\n  };\r\n\r\n  const clear = () => {\r\n    contextRef.current.clearRect(\r\n      0,\r\n      0,\r\n      canvasRef.current.width,\r\n      canvasRef.current.height\r\n    );\r\n    socket.emit('clear');\r\n  };\r\n\r\n  const endGame = () => {\r\n    history.push('/end');\r\n    socket.emit('end game');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='canvas' style={{ marginBottom: '20px' }}>\r\n        <canvas\r\n          id='canvas'\r\n          onMouseDown={startDrawing}\r\n          onMouseUp={finishDrawing}\r\n          onMouseMove={draw}\r\n          onTouchStart={startDrawing}\r\n          onTouchEnd={finishDrawing}\r\n          onTouchMove={draw}\r\n          ref={canvasRef}\r\n        />\r\n      </div>\r\n      {role === 'draw' ? (\r\n        <>\r\n          {' '}\r\n          <TwitterPicker color={color} onChange={setColor} />\r\n          <div className='gameButtons'>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              startIcon={<AddIcon />}\r\n              style={{ marginTop: '20px' }}\r\n              onClick={() => setChangeWord(!changeWord)}\r\n            >\r\n              Generate New Word\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              startIcon={<DeleteIcon />}\r\n              style={{ marginTop: '20px' }}\r\n              onClick={clear}\r\n            >\r\n              Clear Canvas\r\n            </Button>\r\n\r\n            <Tooltip\r\n              PopperProps={{\r\n                disablePortal: true,\r\n              }}\r\n              open={open}\r\n              onClose={() => setOpen(false)}\r\n              disableFocusListener\r\n              disableHoverListener\r\n              disableTouchListener\r\n              title='Score Submited'\r\n            >\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                className='endGame'\r\n                startIcon={<SentimentVeryDissatisfiedIcon />}\r\n                style={{ marginTop: '20px' }}\r\n                onClick={endGame}\r\n              >\r\n                End Game\r\n              </Button>\r\n            </Tooltip>\r\n          </div>{' '}\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport Canvas from './Canvas';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TextField from '@material-ui/core/TextField';\nimport { socket } from '../socket/Socket';\nimport { useHistory } from 'react-router-dom';\n\nconst Main = ({ setWord, setScore }) => {\n  const { role, nickName, word, words, gameStatus, modePicked, mode, score } =\n    useContext(UserContext);\n  const [changeWord, setChangeWord] = useState(false);\n  const [guess, setGuess] = useState('');\n  const [secondUser, setSecondUser] = useState('');\n  const history = useHistory();\n  const scoreMap = {\n    easy: 1,\n    normal: 3,\n    hard: 5,\n  };\n  useEffect(() => {\n    // Generate random word\n    if (role === 'draw' && changeWord) {\n      const numberIndex = words.findIndex((currWord) => currWord === word);\n      const ind = numberIndex + 1 >= words.length ? 0 : numberIndex + 1;\n      const nextWord = words[ind];\n      setWord(nextWord);\n      socket.emit('clear');\n    }\n  }, [changeWord]);\n\n  useEffect(() => {\n    socket.on('check answer', (data) => {\n      if (data.guess === word.toLocaleLowerCase()) {\n        socket.emit('right answer', score + scoreMap[mode]);\n        setScore(score + scoreMap[mode]);\n        setChangeWord((prevState) => !prevState);\n        setSecondUser(data.nickName);\n      }\n    });\n    socket.on('end game', () => history.push('/end'));\n    return () => {\n      socket.off('check answer');\n      socket.off('end game');\n    };\n  }, [word]);\n\n  useEffect(() => {\n    socket.on('right answer', (score) => {\n      setChangeWord((prevState) => !prevState);\n      setScore(score);\n    });\n    socket.on('mode picked', () => setScore(0));\n    return () => {\n      socket.off('right answer');\n    };\n  }, []);\n\n  const handleGuess = () => {\n    socket.emit('check answer', { guess: guess.toLocaleLowerCase(), nickName });\n  };\n\n  return (\n    <div className='content'>\n      {gameStatus && modePicked ? (\n        <>\n          {role === 'draw' ? <h2>Draw - {word}</h2> : ''}\n          <h3 style={{ marginBottom: '10px' }}>Score : {score}</h3>\n          <Canvas\n            user2={secondUser}\n            score={score}\n            changeWord={changeWord}\n            setChangeWord={setChangeWord}\n          />\n        </>\n      ) : (\n        <div className='waiting'>\n          <AccessTimeIcon fontSize='large' />\n          <Typography paragraph align='center' variant='h2'>\n            Waiting For 2nd Player...\n          </Typography>\n          <AccessTimeIcon fontSize='large' />\n        </div>\n      )}\n      {role === 'guess' && gameStatus && modePicked ? (\n        <>\n          <TextField\n            onChange={(e) => setGuess(e.target.value)}\n            value={guess}\n            id='standard-basic'\n            label='Place Your Guess Here !'\n          />\n          <Button\n            onClick={handleGuess}\n            variant='contained'\n            color='secondary'\n            style={{ marginTop: '20px' }}\n          >\n            Submit Your Answer\n          </Button>\n        </>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ChildFriendlyIcon from '@material-ui/icons/ChildFriendly';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\nimport { useHistory } from 'react-router-dom';\nimport { socket } from '../socket/Socket';\nimport { URL_ENDPOINT } from '../URL.ENDPOINT';\n\nconst ModePick = ({ setModePicked, setWords, score, setMode }) => {\n  const history = useHistory();\n  const { mode } = useContext(UserContext);\n\n  useEffect(() => {\n    mode &&\n      (async () => {\n        try {\n          let res = await fetch(`${URL_ENDPOINT}/words/${mode}`);\n          let data = await res.json();\n          socket.emit('mode picked', score);\n          setModePicked(true);\n          setWords(data);\n          history.push('/choose-word');\n        } catch (error) {\n          throw error;\n        }\n      })();\n  }, [mode]);\n\n  return (\n    <div className='modePick'>\n      <Typography variant='h4' align='center' color='textPrimary'>\n        Pick Your Game Level :\n      </Typography>\n\n      <Typography variant='h5' align='center' color='textSecondary' paragraph>\n        EZ Mode Win - 1 Point <br />\n        Medium Mode Win - 3 Points <br />\n        Hard Mode Win - 5 Points\n      </Typography>\n      <div className='levelButtons'>\n        <Button\n          style={{ marginTop: '10px' }}\n          className='easy'\n          size='large'\n          startIcon={<ChildFriendlyIcon />}\n          variant='contained'\n          color='primary'\n          onClick={(e) => {\n            setMode('easy');\n          }}\n        >\n          Easy\n        </Button>\n        <Button\n          style={{ marginTop: '10px' }}\n          size='large'\n          variant='contained'\n          startIcon={<SentimentSatisfiedOutlinedIcon />}\n          color='primary'\n          onClick={(e) => {\n            setMode('normal');\n          }}\n        >\n          Medium\n        </Button>\n        <Button\n          style={{ marginTop: '10px' }}\n          className='hard'\n          size='large'\n          startIcon={<WarningIcon />}\n          variant='contained'\n          color='primary'\n          onClick={(e) => {\n            setMode('hard');\n          }}\n        >\n          Hard\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ModePick;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport BrushIcon from '@material-ui/icons/Brush';\n\nconst EndGame = () => {\n    return (\n        <div className=\"endContent\">\n            <BrushIcon fontSize=\"large\" />\n            <Typography\n                variant=\"h4\"\n                align=\"center\"\n                color=\"textPrimary\">\n                Thank You For Playing!\n            </Typography>\n            <BrushIcon fontSize=\"large\" />\n            <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph>\n                Hope you had fun :) <br />\n                See you soon!\n            </Typography>\n            <Typography\n                variant=\"h6\"\n                align=\"center\"\n                color=\"textPrimary\">\n                For a new game - refresh your browser\n            </Typography>\n        </div>\n    );\n};\n\nexport default EndGame;\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst WordChoose = ({ setWord }) => {\r\n  const { words } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const handleClick = (word) => {\r\n    setWord(word);\r\n    history.push('/main');\r\n  };\r\n  return (\r\n    <Container\r\n      component='main'\r\n      maxWidth='xs'\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        marginTop: '40px',\r\n      }}\r\n    >\r\n      <Typography component='h1' variant='h5'>\r\n        Choose Word\r\n      </Typography>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          marginTop: '10px',\r\n          gap: '10px',\r\n        }}\r\n      >\r\n        {words.map((word) => (\r\n          <Button\r\n            key={word}\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={() => handleClick(word)}\r\n          >\r\n            {word}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WordChoose;\r\n","import './App.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport Header from './components/Header';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport SignIn from './components/SignIn';\nimport Main from './components/Main';\nimport { UserContext } from './context/UserContext';\nimport ModePick from './components/ModePick';\nimport { socket } from './socket/Socket';\nimport EndGame from './components/EndGame';\nimport WordChoose from './components/WordChoose';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: blue[500],\n      },\n      secondary: {\n        main: orange[500],\n      },\n    },\n  });\n\n  useEffect(() => {\n    socket.on('connection', (data) => {\n      setRole(data.role);\n    });\n    socket.on('game full', () => {\n      setGameStatus(true);\n    });\n    socket.on('mode picked', () => {\n      setModePicked(true);\n    });\n  }, []);\n\n  const [fullName, setFullName] = useState('');\n  const [nickName, setNickName] = useState('');\n  const [role, setRole] = useState('');\n  const [gameStatus, setGameStatus] = useState(false);\n  const [words, setWords] = useState([]);\n  const [word, setWord] = useState([]);\n  const [mode, setMode] = useState('');\n  const [modePicked, setModePicked] = useState(false);\n  const [score, setScore] = useState(0);\n\n  return (\n    <Router>\n      <UserContext.Provider\n        value={{\n          fullName,\n          nickName,\n          setFullName,\n          setNickName,\n          role,\n          words,\n          word,\n          mode,\n          modePicked,\n          gameStatus,\n          score,\n        }}\n      >\n        <ThemeProvider theme={theme}>\n          <Header gameStatus={gameStatus} />\n          <Redirect to='/sign' />\n          <Route exact path='/'>\n            <Redirect to='/sign' />\n          </Route>\n          <Route\n            path='/choose-word'\n            component={() => <WordChoose setWord={setWord} />}\n          />\n          <Route path='/sign' component={() => <SignIn />} />\n          <Route\n            path='/mode'\n            component={() => (\n              <ModePick\n                setWords={setWords}\n                setModePicked={setModePicked}\n                setMode={setMode}\n              />\n            )}\n          />\n          <Route\n            path='/main'\n            component={() => <Main setWord={setWord} setScore={setScore} />}\n          />\n\n          <Route path='/end' component={EndGame} />\n        </ThemeProvider>\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}